(()=>{"use strict";localStorage.clear();let e="home";localStorage.setItem("currentProject",e),localStorage.setItem("projects",JSON.stringify({home:[]})),console.log("startup values:"),console.log(localStorage.getItem("currentProject")),console.log(JSON.parse(localStorage.getItem("projects"))),document.querySelector("#plus-button").addEventListener("click",(()=>{document.querySelector("#to-do-form").style.display="flex"})),document.querySelector("#x-icon").addEventListener("click",(()=>{document.querySelector("#to-do-form").style.display="none"})),document.querySelector("#add-project-button").addEventListener("click",(()=>{document.querySelector("#new-project-form").style.display="block"})),document.querySelector("#project-cancel-button").addEventListener("click",(()=>{document.querySelector("#new-project-form").style.display="none"})),function(){let e=localStorage.getItem("currentProject"),t=JSON.parse(localStorage.getItem("projects"));window.formSubmit=function(){const o=document.querySelector("#form-title").value,r=document.querySelector("#form-description").value,c=document.querySelector("#form-date").value,l=document.querySelector('input[name="form-priority"]:checked').value;document.querySelector("#to-do-form").reset(),document.querySelector("#to-do-form").style.display="none";let n=((e,t,o,r)=>({getTitle:()=>e,getDescription:()=>t,getDueDate:()=>o,getPriority:()=>r}))(o,r,c,l);!function(e,t){let o=document.createElement("div");o.className=t+" to-do";let r=document.createElement("div"),c=document.createElement("div");c.className="title";let l=document.createElement("div");l.className="description";let n=document.createElement("div");n.className="date","low"==e.getPriority()&&r.classList.add("todo-prio","low-prio"),"medium"==e.getPriority()&&r.classList.add("todo-prio","med-prio"),"high"==e.getPriority()&&r.classList.add("todo-prio","high-prio"),c.textContent=e.getTitle(),l.textContent=e.getDescription(),n.textContent=e.getDueDate(),o.appendChild(c),o.appendChild(l),o.appendChild(n),o.appendChild(r),document.querySelector("#main-area").appendChild(o)}(n,e),t[e].push(n),localStorage.setItem("projects",JSON.stringify(t)),console.log("after to do created:"),console.log(e),console.log(JSON.parse(localStorage.getItem("projects")))},document.querySelector("#to-do-form").setAttribute("onsubmit","formSubmit();return false")}(),function(){let e=JSON.parse(localStorage.getItem("projects")),t=localStorage.getItem("currentProject");window.projFormSubmit=function(){let o=document.querySelector("#project-title").value.toLowerCase();if(console.log("before new project created:"),console.log(t),console.log(e),!(o in e)&&""!==o){let r=document.createElement("h2");r.className="sidebar-option",r.id=o,r.textContent=o.toUpperCase(),document.querySelector("#sidebar").appendChild(r),e.newProjTitle=[],console.log("after new project created:"),console.log(t),console.log(e),localStorage.setItem("projects",JSON.stringify(e)),document.querySelector(`#${o}`).addEventListener("click",(()=>{document.querySelectorAll(`.${t}`).forEach((e=>{e.style.display="none"})),t=o,localStorage.setItem("currentProject",t),document.querySelectorAll(`.${t}`).forEach((e=>{e.style.display="grid"})),document.querySelector("#main-area-title").textContent=t.toUpperCase()}))}document.querySelector("#new-project-form").reset(),document.querySelector("#new-project-form").style.display="none"},document.querySelector("#new-project-form").setAttribute("onsubmit","projFormSubmit();return false")}(),document.querySelector("#home").addEventListener("click",(()=>{document.querySelectorAll(`.${e}`).forEach((e=>{e.style.display="none"})),e="home",document.querySelectorAll(`.${e}`).forEach((e=>{e.style.display="grid"})),document.querySelector("#main-area-title").textContent=e.toUpperCase()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,